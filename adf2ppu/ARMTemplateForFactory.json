{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adf2ppu"
		},
		"LS_ABLB_SINK_DB_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_ABLB_SINK_DB'"
		},
		"LS_ADLS2_SINK_EMP_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'LS_ADLS2_SINK_EMP'"
		},
		"LS_ADLS_SRC_GEN1_servicePrincipalKey": {
			"type": "secureString",
			"metadata": "Secure string for 'servicePrincipalKey' of 'LS_ADLS_SRC_GEN1'"
		},
		"LS_BLOB_EMP_SRC_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_BLOB_EMP_SRC'"
		},
		"LS_ORCL_SCOTT_EMP_DB_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_ORCL_SCOTT_EMP_DB'"
		},
		"LS_ORCL_SRC_DB_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_ORCL_SRC_DB'"
		},
		"A_LS_DET_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'A_LS_DET'"
		},
		"LS_ADLS2_SINK_EMP_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://adlsgen2ppu.dfs.core.windows.net"
		},
		"LS_ADLS_SRC_GEN1_properties_typeProperties_dataLakeStoreUri": {
			"type": "string",
			"defaultValue": "https://datalakepuligen1.azuredatalakestore.net/webhdfs/v1"
		},
		"LS_ADLS_SRC_GEN1_properties_typeProperties_servicePrincipalId": {
			"type": "string",
			"defaultValue": "40c6f5e3-0ec9-4323-901e-8fa4edeada3d"
		},
		"LS_ADLS_SRC_GEN1_properties_typeProperties_tenant": {
			"type": "string",
			"defaultValue": "4d785f79-c58b-4639-8885-110ae332ee27"
		},
		"LS_ADLS_SRC_GEN1_properties_typeProperties_subscriptionId": {
			"type": "string",
			"defaultValue": "ada9935a-24dc-44e0-a65d-51982a8e4497"
		},
		"LS_ADLS_SRC_GEN1_properties_typeProperties_resourceGroupName": {
			"type": "string",
			"defaultValue": "rg_puli"
		},
		"A_LS_DET_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://adlsgen2ppu.dfs.core.windows.net"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Apipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Adataflow1",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"empSrc": {},
									"sink1": {},
									"sink2": {},
									"sink3": {},
									"sink4": {},
									"sink5": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/Adataflow1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/JoinSelectPipeLine')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "JoinDataFlow",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_joins",
								"type": "DataFlowReference",
								"parameters": {
									"parameter1": "SAL+COMM",
									"parameter2": "SAL+COMM"
								},
								"datasetParameters": {
									"adlssrcemp": {},
									"blobtargetemp": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2021-01-30T08:31:25Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/df_joins')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ORACLE_ADLS2_EMP')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ORACLE-CPY-ADLS2",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": "emp_scott.csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ORACLE_SCOTT_EMP",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS2_EMP",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "ORACLE-DEPT-CPY-ADLS2",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": "dept_scott.csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ORACLE_SCOTT_DEPT",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS2_EMP",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ORACLE_SCOTT_EMP')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS2_EMP')]",
				"[concat(variables('factoryId'), '/datasets/DS_ORACLE_SCOTT_DEPT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SurgateKeyPipe')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SurgateKey",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "SurgateKey",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"targetSurgKey": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2021-01-30T16:42:09Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/SurgateKey')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/WINDOW_PIPE')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "window",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2021-02-01T11:21:45Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/window')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/conditionalSplitPipe')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "conditionalSplit",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "conditionalSplit",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"conditionSplit": {},
									"d10target": {},
									"d20target": {},
									"sink1": {},
									"otherDepartmentTarget": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Rank_Transformation",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "conditionalSplit",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Rank_Transformation",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"empsrccsv": {},
									"rankDense": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2021-01-30T14:13:49Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/conditionalSplit')]",
				"[concat(variables('factoryId'), '/dataflows/Rank_Transformation')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "AggegateTransformations",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "AggegateTransformations",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2021-01-30T17:13:46Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/AggegateTransformations')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "json_dataflow",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "json_dataflow",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"jsonfile": {},
									"JSON": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2021-02-01T11:52:37Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/json_dataflow')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/unpivot')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Unpivot_Dataflow",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Unpivot_Dataflow",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"UNPIVOTSRC": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2021-02-01T10:44:05Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/Unpivot_Dataflow')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ADLS2_EMP')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS2_SINK_EMP",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "landing"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS2_SINK_EMP')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ADLS_DEPT_SRC_CSV')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS_SRC_GEN1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureDataLakeStoreLocation",
						"fileName": "dept.csv",
						"folderPath": "src"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Deptno",
						"type": "String"
					},
					{
						"name": "Dname",
						"type": "String"
					},
					{
						"name": "Loc",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS_SRC_GEN1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ADLS_JSON_SRC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS_SRC_GEN1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureDataLakeStoreLocation",
						"fileName": "example_2.json",
						"folderPath": "src"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"quiz": {
							"type": "object",
							"properties": {
								"sport": {
									"type": "object",
									"properties": {
										"q1": {
											"type": "object",
											"properties": {
												"question": {
													"type": "string"
												},
												"options": {
													"type": "array",
													"items": {
														"type": "string"
													}
												},
												"answer": {
													"type": "string"
												}
											}
										}
									}
								},
								"maths": {
									"type": "object",
									"properties": {
										"q1": {
											"type": "object",
											"properties": {
												"question": {
													"type": "string"
												},
												"options": {
													"type": "array",
													"items": {
														"type": "string"
													}
												},
												"answer": {
													"type": "string"
												}
											}
										},
										"q2": {
											"type": "object",
											"properties": {
												"question": {
													"type": "string"
												},
												"options": {
													"type": "array",
													"items": {
														"type": "string"
													}
												},
												"answer": {
													"type": "string"
												}
											}
										}
									}
								}
							}
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS_SRC_GEN1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ADLS_SRC_EMP_CSV')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS_SRC_GEN1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureDataLakeStoreLocation",
						"fileName": "emp.csv",
						"folderPath": "src"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Deptno",
						"type": "String"
					},
					{
						"name": "Dname",
						"type": "String"
					},
					{
						"name": "Loc",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS_SRC_GEN1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ADLS_UNPIVOT_SRC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS_SRC_GEN1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureDataLakeStoreLocation",
						"fileName": "unpivot.csv",
						"folderPath": "src"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "order_number",
						"type": "String"
					},
					{
						"name": "customer",
						"type": "String"
					},
					{
						"name": "apple",
						"type": "String"
					},
					{
						"name": "banana",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS_SRC_GEN1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ADLS_WINDOW_SRC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS_SRC_GEN1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureDataLakeStoreLocation",
						"fileName": "window.csv",
						"folderPath": "src"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "name",
						"type": "String"
					},
					{
						"name": "no",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS_SRC_GEN1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_BLOB_SRC_EMP_CSV')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ABLB_SINK_DB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "emp.csv",
						"container": "src"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "EMPNO",
						"type": "String"
					},
					{
						"name": "ENAME",
						"type": "String"
					},
					{
						"name": "JOB",
						"type": "String"
					},
					{
						"name": "MGR",
						"type": "String"
					},
					{
						"name": "HIREDATE",
						"type": "String"
					},
					{
						"name": "SAL",
						"type": "String"
					},
					{
						"name": "COMM",
						"type": "String"
					},
					{
						"name": "DEPTNO",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ABLB_SINK_DB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_BLOB_TARGET_EMP_CSV')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_BLOB_EMP_SRC",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "target"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_BLOB_EMP_SRC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_DEPT_ADLS2_LANDING')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS2_SINK_EMP",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "SCOTT.DEPTdept_scott.csv",
						"fileSystem": "landing"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS2_SINK_EMP')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_EMP_ADLS2_LANDING')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS2_SINK_EMP",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "SCOTT.EMPemp_scott.csv",
						"fileSystem": "landing"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS2_SINK_EMP')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ORACLE_SCOTT_DEPT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ORCL_SCOTT_EMP_DB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "OracleTable",
				"schema": [],
				"typeProperties": {
					"schema": "SCOTT",
					"table": "DEPT"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ORCL_SCOTT_EMP_DB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ORACLE_SCOTT_EMP')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ORCL_SCOTT_EMP_DB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "OracleTable",
				"schema": [],
				"typeProperties": {
					"schema": "SCOTT",
					"table": "EMP"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ORCL_SCOTT_EMP_DB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_ABLB_SINK_DB')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('LS_ABLB_SINK_DB_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_ADLS2_SINK_EMP')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('LS_ADLS2_SINK_EMP_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('LS_ADLS2_SINK_EMP_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_ADLS_SRC_GEN1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDataLakeStore",
				"typeProperties": {
					"dataLakeStoreUri": "[parameters('LS_ADLS_SRC_GEN1_properties_typeProperties_dataLakeStoreUri')]",
					"servicePrincipalId": "[parameters('LS_ADLS_SRC_GEN1_properties_typeProperties_servicePrincipalId')]",
					"servicePrincipalKey": {
						"type": "SecureString",
						"value": "[parameters('LS_ADLS_SRC_GEN1_servicePrincipalKey')]"
					},
					"tenant": "[parameters('LS_ADLS_SRC_GEN1_properties_typeProperties_tenant')]",
					"subscriptionId": "[parameters('LS_ADLS_SRC_GEN1_properties_typeProperties_subscriptionId')]",
					"resourceGroupName": "[parameters('LS_ADLS_SRC_GEN1_properties_typeProperties_resourceGroupName')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_BLOB_EMP_SRC')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('LS_BLOB_EMP_SRC_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_ORCL_SCOTT_EMP_DB')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "Oracle",
				"typeProperties": {
					"connectionString": "[parameters('LS_ORCL_SCOTT_EMP_DB_connectionString')]"
				},
				"connectVia": {
					"referenceName": "selfHosted2ppu",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/selfHosted2ppu')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_ORCL_SRC_DB')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "Oracle",
				"typeProperties": {
					"connectionString": "[parameters('LS_ORCL_SRC_DB_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/selfHosted2ppu')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Adataflow1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_EMP_ADLS2_LANDING",
								"type": "DatasetReference"
							},
							"name": "empSrc"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_ADLS2_EMP",
								"type": "DatasetReference"
							},
							"name": "sink1"
						},
						{
							"dataset": {
								"referenceName": "DS_ADLS2_EMP",
								"type": "DatasetReference"
							},
							"name": "sink2"
						},
						{
							"dataset": {
								"referenceName": "DS_ADLS2_EMP",
								"type": "DatasetReference"
							},
							"name": "sink3"
						},
						{
							"dataset": {
								"referenceName": "DS_ADLS2_EMP",
								"type": "DatasetReference"
							},
							"name": "sink4"
						},
						{
							"dataset": {
								"referenceName": "DS_ADLS2_EMP",
								"type": "DatasetReference"
							},
							"name": "sink5"
						}
					],
					"transformations": [
						{
							"name": "ConditionalSplitDepatwise"
						}
					],
					"script": "source(output(\n\t\tEMPNO as short,\n\t\tENAME as string,\n\t\tJOB as string,\n\t\tMGR as short,\n\t\tHIREDATE as string,\n\t\tSAL as double,\n\t\tCOMM as double,\n\t\tDEPTNO as short\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tpartitionBy('hash', 1)) ~> empSrc\nempSrc split(DEPTNO==10,\n\tDEPTNO==20,\n\tDEPTNO==30,\n\tDEPTNO==40,\n\tdisjoint: false) ~> ConditionalSplitDepatwise@(dept10, dept20, dept30, dept40, deptOthers)\nConditionalSplitDepatwise@dept10 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['dept10.csv'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tsaveOrder: 1) ~> sink1\nConditionalSplitDepatwise@dept20 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['dept20.csv'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink2\nConditionalSplitDepatwise@dept30 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['dept30.csv'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink3\nConditionalSplitDepatwise@dept40 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['dept40.csv'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink4\nConditionalSplitDepatwise@deptOthers sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['deptothers.csv'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink5"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_EMP_ADLS2_LANDING')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS2_EMP')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AggegateTransformations')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_ADLS_SRC_EMP_CSV",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_BLOB_TARGET_EMP_CSV",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "Aggregate1"
						}
					],
					"script": "source(output(\n\t\tEMPNO as short,\n\t\tENAME as string,\n\t\tJOB as string,\n\t\tMGR as string,\n\t\tHIREDATE as string,\n\t\tSAL as integer,\n\t\tCOMM as string,\n\t\tDEPTNO as short\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> source1\nsource1 aggregate(groupBy(DEPTNO),\n\tSumSal = sum(SAL),\n\t\tMinSal = min(SAL),\n\t\tMaxSal = max(SAL)) ~> Aggregate1\nAggregate1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['aggegateData.csv'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_SRC_EMP_CSV')]",
				"[concat(variables('factoryId'), '/datasets/DS_BLOB_TARGET_EMP_CSV')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Exists_DataFlow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_ADLS_SRC_EMP_CSV",
								"type": "DatasetReference"
							},
							"name": "source1"
						},
						{
							"dataset": {
								"referenceName": "DS_ADLS_DEPT_SRC_CSV",
								"type": "DatasetReference"
							},
							"name": "source2"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_BLOB_TARGET_EMP_CSV",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "Exists1"
						}
					],
					"script": "source(output(\n\t\tEMPNO as short,\n\t\tENAME as string,\n\t\tJOB as string,\n\t\tMGR as string,\n\t\tHIREDATE as string,\n\t\tSAL as short,\n\t\tCOMM as string,\n\t\tDEPTNO as short\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> source1\nsource(output(\n\t\tDeptno as short,\n\t\tDname as string,\n\t\tLoc as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> source2\nsource1, source2 exists(source1@DEPTNO == source2@Deptno,\n\tnegate:true,\n\tbroadcast: 'auto')~> Exists1\nExists1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_SRC_EMP_CSV')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_DEPT_SRC_CSV')]",
				"[concat(variables('factoryId'), '/datasets/DS_BLOB_TARGET_EMP_CSV')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LookUp')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_ADLS_SRC_EMP_CSV",
								"type": "DatasetReference"
							},
							"name": "adlsEmpSrc"
						},
						{
							"dataset": {
								"referenceName": "DS_ADLS_DEPT_SRC_CSV",
								"type": "DatasetReference"
							},
							"name": "adlsDeptSrc"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_BLOB_TARGET_EMP_CSV",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "Lookup1"
						}
					],
					"script": "source(output(\n\t\tEMPNO as short,\n\t\tENAME as string,\n\t\tJOB as string,\n\t\tMGR as string,\n\t\tHIREDATE as string,\n\t\tSAL as short,\n\t\tCOMM as string,\n\t\tDEPTNO as short\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> adlsEmpSrc\nsource(output(\n\t\tDeptno as short,\n\t\tDname as string,\n\t\tLoc as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> adlsDeptSrc\nadlsEmpSrc, adlsDeptSrc lookup(adlsEmpSrc@DEPTNO == adlsDeptSrc@Deptno,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> Lookup1\nLookup1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_SRC_EMP_CSV')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_DEPT_SRC_CSV')]",
				"[concat(variables('factoryId'), '/datasets/DS_BLOB_TARGET_EMP_CSV')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Pivot_Dataflow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_ADLS_SRC_EMP_CSV",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_BLOB_TARGET_EMP_CSV",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "Pivot1"
						}
					],
					"script": "source(output(\n\t\tEMPNO as short,\n\t\tENAME as string,\n\t\tJOB as string,\n\t\tMGR as string,\n\t\tHIREDATE as string,\n\t\tSAL as integer,\n\t\tCOMM as string,\n\t\tDEPTNO as short\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> source1\nsource1 pivot(groupBy(DEPTNO),\n\tpivotBy(JOB),\n\tSAL_Of_ = sum(SAL),\n\tcolumnNaming: '$N$V',\n\tlateral: true) ~> Pivot1\nPivot1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_SRC_EMP_CSV')]",
				"[concat(variables('factoryId'), '/datasets/DS_BLOB_TARGET_EMP_CSV')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Rank_Transformation')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_ADLS_SRC_EMP_CSV",
								"type": "DatasetReference"
							},
							"name": "empsrccsv"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_BLOB_TARGET_EMP_CSV",
								"type": "DatasetReference"
							},
							"name": "rankDense"
						}
					],
					"transformations": [
						{
							"name": "Ranking"
						},
						{
							"name": "DenseRank"
						}
					],
					"script": "source(output(\n\t\tEMPNO as short,\n\t\tENAME as string,\n\t\tJOB as string,\n\t\tMGR as string,\n\t\tHIREDATE as string,\n\t\tSAL as integer,\n\t\tCOMM as string,\n\t\tDEPTNO as short\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> empsrccsv\nempsrccsv rank(desc(SAL, true),\n\toutput(sal_rank as long)) ~> Ranking\nRanking rank(desc(SAL, true),\n\toutput(sal_dense_rank as long),\n\tdense: true) ~> DenseRank\nDenseRank sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> rankDense"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_SRC_EMP_CSV')]",
				"[concat(variables('factoryId'), '/datasets/DS_BLOB_TARGET_EMP_CSV')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SurgateKey')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_ADLS_SRC_EMP_CSV",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_BLOB_TARGET_EMP_CSV",
								"type": "DatasetReference"
							},
							"name": "targetSurgKey"
						}
					],
					"transformations": [
						{
							"name": "SurrogateKey1"
						}
					],
					"script": "source(output(\n\t\tEMPNO as short,\n\t\tENAME as string,\n\t\tJOB as string,\n\t\tMGR as string,\n\t\tHIREDATE as string,\n\t\tSAL as short,\n\t\tCOMM as string,\n\t\tDEPTNO as short\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> source1\nsource1 keyGenerate(output(SURKEY as long),\n\tstartAt: 1001L) ~> SurrogateKey1\nSurrogateKey1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['sgtfile.csv'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> targetSurgKey"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_SRC_EMP_CSV')]",
				"[concat(variables('factoryId'), '/datasets/DS_BLOB_TARGET_EMP_CSV')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Unpivot_Dataflow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_ADLS_UNPIVOT_SRC",
								"type": "DatasetReference"
							},
							"name": "UNPIVOTSRC"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_BLOB_TARGET_EMP_CSV",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "Unpivot1"
						}
					],
					"script": "source(output(\n\t\torder_number as string,\n\t\tcustomer as string,\n\t\tapple as string,\n\t\tbanana as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> UNPIVOTSRC\nUNPIVOTSRC unpivot(output(\n\t\tqty as integer,\n\t\tapple as string\n\t),\n\tungroupBy(order_number,\n\t\tcustomer),\n\tlateral: true,\n\tignoreNullPivots: false) ~> Unpivot1\nUnpivot1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['unpivot.csv'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_UNPIVOT_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DS_BLOB_TARGET_EMP_CSV')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/conditionalSplit')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_ADLS_SRC_EMP_CSV",
								"type": "DatasetReference"
							},
							"name": "conditionSplit"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_BLOB_TARGET_EMP_CSV",
								"type": "DatasetReference"
							},
							"name": "d10target"
						},
						{
							"dataset": {
								"referenceName": "DS_BLOB_TARGET_EMP_CSV",
								"type": "DatasetReference"
							},
							"name": "d20target"
						},
						{
							"dataset": {
								"referenceName": "DS_BLOB_TARGET_EMP_CSV",
								"type": "DatasetReference"
							},
							"name": "sink1"
						},
						{
							"dataset": {
								"referenceName": "DS_BLOB_TARGET_EMP_CSV",
								"type": "DatasetReference"
							},
							"name": "otherDepartmentTarget"
						}
					],
					"transformations": [
						{
							"name": "ConditionalSplit1"
						}
					],
					"script": "source(output(\n\t\tEMPNO as short,\n\t\tENAME as string,\n\t\tJOB as string,\n\t\tMGR as string,\n\t\tHIREDATE as string,\n\t\tSAL as short,\n\t\tCOMM as string,\n\t\tDEPTNO as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> conditionSplit\nconditionSplit split(DEPTNO=='10',\n\tDEPTNO=='20',\n\tDEPTNO=='30',\n\tdisjoint: false,\n\tpartitionBy('hash', 1)) ~> ConditionalSplit1@(D10, D20, D30, OTHERS)\nConditionalSplit1@D10 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['Dept10ConditionalSplit.csv'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> d10target\nConditionalSplit1@D20 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['Dept20ConditionalSplit.csv'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> d20target\nConditionalSplit1@D30 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['Dept30ConditionalSplit.csv'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1\nConditionalSplit1@OTHERS sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['otherDeptConditionalSplit.csv'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> otherDepartmentTarget"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_SRC_EMP_CSV')]",
				"[concat(variables('factoryId'), '/datasets/DS_BLOB_TARGET_EMP_CSV')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_joins')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_ADLS_SRC_EMP_CSV",
								"type": "DatasetReference"
							},
							"name": "adlssrcemp"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_BLOB_TARGET_EMP_CSV",
								"type": "DatasetReference"
							},
							"name": "blobtargetemp"
						}
					],
					"transformations": [
						{
							"name": "SelectedColumns"
						},
						{
							"name": "DerivedColumn1"
						},
						{
							"name": "Filter1"
						},
						{
							"name": "Sort1"
						}
					],
					"script": "parameters{\n\tparameter1 as string (SAL+COMM),\n\tparameter2 as string (SAL+COMM)\n}\nsource(output(\n\t\tEMPNO as short,\n\t\tENAME as string,\n\t\tJOB as string,\n\t\tMGR as string,\n\t\tHIREDATE as string,\n\t\tSAL as string,\n\t\tCOMM as string,\n\t\tDEPTNO as short\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tpartitionBy('roundRobin', 2)) ~> adlssrcemp\nadlssrcemp select(mapColumn(\n\t\tEmployeeNumber = EMPNO,\n\t\tJustName = ENAME,\n\t\tOccupation = JOB,\n\t\tSalary = SAL,\n\t\tCommission = COMM,\n\t\tDepartmentNumber = DEPTNO\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectedColumns\nSelectedColumns derive(total = toInteger(Salary) + iifNull(toInteger(Commission),0)) ~> DerivedColumn1\nDerivedColumn1 filter(DepartmentNumber==10) ~> Filter1\nFilter1 sort(desc(toInteger(Salary), true)) ~> Sort1\nSort1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\ttruncate: true,\n\tpartitionBy('roundRobin', 2),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> blobtargetemp"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_SRC_EMP_CSV')]",
				"[concat(variables('factoryId'), '/datasets/DS_BLOB_TARGET_EMP_CSV')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/joinsDataflow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_ADLS_SRC_EMP_CSV",
								"type": "DatasetReference"
							},
							"name": "ADLSEMPSRC"
						},
						{
							"dataset": {
								"referenceName": "DS_ADLS_DEPT_SRC_CSV",
								"type": "DatasetReference"
							},
							"name": "ADLSDEPTSRC"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_BLOB_TARGET_EMP_CSV",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "Join1"
						}
					],
					"script": "source(output(\n\t\tEMPNO as short,\n\t\tENAME as string,\n\t\tJOB as string,\n\t\tMGR as string,\n\t\tHIREDATE as string,\n\t\tSAL as short,\n\t\tCOMM as string,\n\t\tDEPTNO as short\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> ADLSEMPSRC\nsource(output(\n\t\tDeptno as short,\n\t\tDname as string,\n\t\tLoc as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> ADLSDEPTSRC\nADLSEMPSRC, ADLSDEPTSRC join(ADLSEMPSRC@DEPTNO > ADLSDEPTSRC@Deptno,\n\tjoinType:'cross',\n\tbroadcast: 'auto')~> Join1\nJoin1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_SRC_EMP_CSV')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_DEPT_SRC_CSV')]",
				"[concat(variables('factoryId'), '/datasets/DS_BLOB_TARGET_EMP_CSV')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/json_dataflow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_ADLS_JSON_SRC",
								"type": "DatasetReference"
							},
							"name": "jsonfile"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_BLOB_TARGET_EMP_CSV",
								"type": "DatasetReference"
							},
							"name": "JSON"
						}
					],
					"transformations": [
						{
							"name": "Flatten1"
						},
						{
							"name": "Flatten2"
						},
						{
							"name": "Flatten3"
						}
					],
					"script": "source(output(\n\t\tquiz as (sport as (q1 as (question as string, options as string[], answer as string)), maths as (q1 as (question as string, options as string[], answer as string), q2 as (question as string, options as string[], answer as string)))\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tdocumentForm: 'singleDocument') ~> jsonfile\njsonfile foldDown(unroll(quiz.sport.q1.options),\n\tmapColumn(\n\t\tquestion = quiz.sport.q1.question,\n\t\toptions = quiz.sport.q1.options,\n\t\tanswer = quiz.sport.q1.answer,\n\t\tmaths = quiz.maths\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> Flatten1\nFlatten1 foldDown(unroll(maths.q1.options),\n\tmapColumn(\n\t\tquestion = maths.q1.question,\n\t\toptions = maths.q1.options,\n\t\tanswer = maths.q1.answer,\n\t\tq2 = maths.q2\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> Flatten2\nFlatten2 foldDown(unroll(q2.options),\n\tmapColumn(\n\t\tquestion = q2.question,\n\t\toptions = q2.options,\n\t\tanswer = q2.answer\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> Flatten3\nFlatten3 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['examJson.csv'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> JSON"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_JSON_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DS_BLOB_TARGET_EMP_CSV')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/window')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_ADLS_WINDOW_SRC",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_BLOB_TARGET_EMP_CSV",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "Window1"
						}
					],
					"script": "source(output(\n\t\tname as string,\n\t\tno as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> source1\nsource1 window(over(name),\n\tasc(no, true),\n\tRANK = rank(),\n\t\tDENSERANK = denseRank(),\n\t\tLEAD = lead(no),\n\t\tLAG = lag(no),\n\t\tCUN_INDIVIDUAL = sum(no)) ~> Window1\nWindow1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_WINDOW_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DS_BLOB_TARGET_EMP_CSV')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/A-Copy-Files-Landing-Stagging')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "A-Get-Details",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "A_NEW_LANDING",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "A-For-Each-Det",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "A-Get-Details",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('A-Get-Details').output.childItems",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "A-Copy-List-Files",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"wildcardFileName": {
													"value": "@item().name",
													"type": "Expression"
												},
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ""
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "A_NEW_LANDING",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "A_DS_SRC_DET",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/A_NEW_LANDING')]",
				"[concat(variables('factoryId'), '/datasets/A_DS_SRC_DET')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/A_LS_DET')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('A_LS_DET_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('A_LS_DET_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/A_DS_SRC_DET')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "A_LS_DET",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "output",
						"fileSystem": "landing"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/A_LS_DET')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/A_NEW_LANDING')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "A_LS_DET",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "landing"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/A_LS_DET')]"
			]
		}
	]
}